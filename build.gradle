// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.0'
        

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    targetSdkVersion = 25
    compileSdkVersion = 25
    minSdkVersion = 15
    buildToolsVersion = "23.0.2"
    v7SupportLib = "com.android.support:appcompat-v7:25.1.0"
    gradleAndroidPlugin = "com.android.tools.build:gradle:2.2.0"

    // 主工程调用插件，通过接口（因为类加载器的委托机制，主工程类加载器无法加载插件类，所以只能通过接口）主工程compile依赖，插件provided依赖
    pluginInterfaceJarName = "pluginInterface.jar"
    pluginInterfaceJarDirAbsPath = String.join(File.separator, rootProject.findProject(":plugininterface").projectDir.absolutePath, "pluginInterfaceJar");
    pluginInterfaceJarAbsPath = String.join(File.separator, pluginInterfaceJarDirAbsPath, pluginInterfaceJarName)

    // 插件调用主工程代码的stub类的jar包（因为类加载器的委托机制，插件类加载器可以加载主工程类，所以在插件中直接调用主工程类），插件provided依赖
    mainInterfaceJarName = "mainInterface.jar"
    mainInterfaceJarDirAbsPath = String.join(File.separator, rootProject.findProject(":plugin").projectDir.absolutePath, "mainInterfaceJar")
    mainInterfaceJarAbsPath = String.join(File.separator, mainInterfaceJarDirAbsPath, mainInterfaceJarName)

    // 插件调用supportv7代码的stub类的jar包
    mainSupportV7InterfaceDirAbsPath = String.join(File.separator, rootProject.findProject(":plugin").projectDir.absolutePath, "mainSupportV7InterfaceJar")
}

